from cmu_graphics import *
from PIL import Image
import os, pathlib

def openImage(fileName):
        return Image.open(os.path.join(pathlib.Path(__file__).parent,fileName))

def onAppStart(app):
    #Mario height and width
    #Default mariox and y values are 100, 250
    app.mariox, app.marioy = 100, 250
    app.marioState = 'idle'
    app.bigMarioWalkRight = openImage('C:\CMU wrk\\15-112\Supra Mario Bros 4.5\imgs\\bigMarioWalkRight.png')
    app.bigMarioWalkLeft = openImage('C:\CMU wrk\\15-112\Supra Mario Bros 4.5\imgs\\bigMarioWalkLeft.png')
    app.bigMarioIdleRight = openImage('C:\CMU wrk\\15-112\Supra Mario Bros 4.5\imgs\\bigMarioIdleRight.png')
    app.bigMarioCrouchRight = openImage('C:\CMU wrk\\15-112\Supra Mario Bros 4.5\imgs\\bigMarioCrouchRight.png')
    app.bigMarioImageWidth,app.bigMarioImageHeight = app.bigMarioWalkRight.width,app.bigMarioWalkRight.height
    app.bigMarioIdleRightWidth, app.bigMarioIdleRightHeight = app.bigMarioIdleRight.width,app.bigMarioIdleRight.height
    app.bigMarioIdleRight = CMUImage(app.bigMarioIdleRight)
    app.bigMarioCrouchRight = CMUImage(app.bigMarioCrouchRight)
    print(f'Mario Width: {app.bigMarioImageWidth}, Mario Height: {app.bigMarioImageHeight}')


    #MarioWalkingRight
    app.spritesWalkingRightBig = [ ]
    app.spritesWalkingLeftBig = [ ]
    for i in range(2):
        frameWalkingRightBig = app.bigMarioWalkRight.crop((100 + 530*i, 30, 400 + 530*i, 430))
        spriteWalkingRight = CMUImage(frameWalkingRightBig)
        app.spritesWalkingRightBig.append(spriteWalkingRight)
    for j in range(2):
        frameWalkingLeftBig = app.bigMarioWalkLeft.crop((100 + 480*j, 25, 400 + 480*j, 425))
        spriteWalkingLeft = CMUImage(frameWalkingLeftBig)
        app.spritesWalkingLeftBig.append(spriteWalkingLeft)
    # app.spriteCounter shows which sprite (of the list) 
    # we should currently display
    app.spriteCounter = 0
    app.stepCounter = 0
    app.stepsPerSecond = 30

def onStep(app):
    app.stepCounter += 1
    if app.stepCounter>= 8:
        app.spriteCounter = (1 + app.spriteCounter) % len(app.spritesWalkingRightBig)
        app.stepCounter = 0 

def onKeyHold(app, keys):
    isMarioMoving = False
    if 'right' in keys and 'left' not in keys:
        app.marioState = 'walkingRightBig'
        app.mariox += 6
        isMarioMoving = True
    elif 'left' in keys and 'right' not in keys:
        app.marioState = 'walkingLeftBig'
        app.mariox -= 6
        isMarioMoving = True
    elif 'down' in keys:
        app.marioState = 'crouchingRightBig'
    else:
        app.marioState = 'idle'


def redrawAll(app):
    drawLine(-100, 400, 300, 400, fill = 'blue')
    if app.marioState == 'walkingRightBig':
        spriteWalkingRight = app.spritesWalkingRightBig[app.spriteCounter]
        #Default mariox and y values are 100, 250
        drawImage(spriteWalkingRight, app.mariox, app.marioy+5, align = 'center')
    elif app.marioState == 'walkingLeftBig':
        spriteWalkingLeft = app.spritesWalkingLeftBig[app.spriteCounter]
        drawImage(spriteWalkingLeft, app.mariox, app.marioy + 10, align = 'center')
    elif app.marioState == 'idle':
        drawImage(app.bigMarioIdleRight, app.mariox, app.marioy + 15, align = 'center')
    elif app.marioState == 'crouchingRightBig':
        drawImage(app.bigMarioCrouchRight, app.mariox, app.marioy+85, align = 'center')

def main():
    runApp(width=700, height=500)

if __name__ == '__main__':
    main()